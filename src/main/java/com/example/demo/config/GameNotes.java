package com.example.demo.config;
/*※このクラスはアプリ動作に関わらないメモ専用
 * 
 * 最初の画面は一行目、出発地（47都道府県プルダウン）、
 * 行き先（47都道府県プルダウン）、 
 * 次の行、予約したい日（プルダウンみたいなカレンダーのウインドウで日付選択）、
 * ご予約人数（String） 
 * 次の行、座席指定はこちら（ボタン）、
 * 画面変わる（新しいタブや画面ではない）、 
 * 新幹線の座席の平面図(seat.htmlに背景画像を貼る、
 * /shinkansen/src/main/resources/static/img/seating_chart.png)
 * 予約席を選択してくださいという見出し、 
 * ところどころ予約済みの席がグレーではじめから選択できない、
 * 白い座席をマウスのクリックで 予約しようとするが、
 * 割と早いスピードで席が次々にグレーになっていく、 
 * 窓際の予約が先に埋まったり、家族が予約して5席一気に埋まったり、
 * 修学旅行で8割一気に埋まったり するのをすりぬけて
 * 最初に決めた予約人数を確保しなければならない。
 * 3回失敗したら 走って行ってくださいとメッセージのウインドウが出てGameOver
 * 
 * スマホでの見た目は無視、要素と画像は画面サイズに追従させる
 * 
 * index.htmlの前提
 * 背景水色、紺色ポイント使い、
白ベタ枠の中に入力する4項目の枠（幅同じ）を中心、等間隔、縦並びに配置
「座席指定はこちら」ボタンは4項目の枠と同じアキで左端揃えだが
幅は文字の幅のみで小さい
 * 
 * 
-「DB使わない」
-「1回成功でトップへ戻り終了」
-「Thymeleaf最小・JSで座席描画」
-「戻った時に座席保持しなくていい」
-「予約状態・永続化も不要」
-「画面リロード・ページ遷移なし」
-「ゲーム目的、3回失敗で終了」
 * 
 * ・座席予約はゲーム目的：1回成功したら終了しトップへ戻る
 * ・予約席の永続化(DB保存や再起動後保持)は不要
 * ・/result のあとはトップ(/)に戻ってゲーム終了
 * ・座席画面の戻りで保持しなくてよい(毎回リセット)
 * ・Thymeleaf依存は最小限、JSメインで作成
 * ・REST化や排他制御など高度処理は今回不要
 * 
✔ DBなし
✔ リロードしない
✔ ページ遷移しない
✔ 同時プレイ想定なし
✔ 日付またぎもJSで処理
 * 
 * seat.html の座席描画 
 * Thymeleafの th:each で seats を表示
 * 今は座席の並び＆番号表示は修正済み（崩れてない状態）
 *
 * seat.html 内の座席生成を Thymeleaf から完全に排除して、
JavaScriptだけで "1A〜10E の正しい並び" を生成する。

座席の並び

1A  2A  3A  4A  5A  6A  7A  8A  9A  10A
1B  2B  3B  4B  5B  6B  7B  8B  9B  10B
1C  2C  3C  4C  5C  6C  7C  8C  9C  10C
1D  2D  3D  4D  5D  6D  7D  8D  9D  10D
1E  2E  3E  4E  5E  6E  7E  8E  9E  10E

✅ 初期グレー席のルール
月	初期で埋める席数	埋め方
9月	20席	団体っぽく固まりで連続埋め
それ以外	10席	完全ランダムでバラ埋め

月	埋まり方	リアリティポイント
3月	1席ずつ	就活・単独移動など
5月/8月	3〜5席まとめ	家族旅行・GW・夏休み
9月	一気に大量消滅	修学旅行・団体貸切
12月	高速1〜5席連続	年末帰省ラッシュ
これ以外の月は同じランダム

// 月ごとの初期埋まり席数（例）
let initialReservedCount = 0;
if (month === 1 || month === 2) initialReservedCount = 5;     // 閑散期
else if (month === 9) initialReservedCount = 20;             // 秋の旅行期
else if (month === 8 || month === 12) initialReservedCount = 30; // 繁忙期
else initialReservedCount = 15; 

埋まる場所の順番は何となくランダムにこの規則で→窓際→通路→真ん中

seat.html　座席選択し終えるより先に成功アラートが出ないようにする
if (selectedSeats.size === maxSelectable) { setTimeout(confirmSeats, 10);

✅ クリック時に reserved が増えて seat が消えるタイミング
✅ or 自動埋まりの setInterval 内
✅ その時点で「もう人数ぶん確保できない」と分かった瞬間に fail()
✅ failCount++（最大3） 
🟢 1回目 or 2回目 → → 日付だけJS変数で +1日して 
→ 選択席リセット → 全席再描画（背景はそのまま） 
🔴 3回目 → → 走って行ってください のウィンドウを出す → ゲーム終了

日付の初期値は /seat に入ってきた日付（フォーム入力値）

 */
public class GameNotes {
	// 実行コードなし
}
